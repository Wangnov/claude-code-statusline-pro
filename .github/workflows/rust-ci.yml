name: Rust CI

on:
  push:
    branches: [main, dev]
    paths:
      - ".github/workflows/rust-ci.yml"
      - ".gitattributes"
      - "Cargo.toml"
      - "Cargo.lock"
      - "rust-toolchain.toml"
      - "AGENTS.md"
      - "build.rs"
      - "src/**"
      - "tests/**"
  pull_request:
    branches: [main, dev]
    paths:
      - ".github/workflows/rust-ci.yml"
      - ".gitattributes"
      - "Cargo.toml"
      - "Cargo.lock"
      - "rust-toolchain.toml"
      - "AGENTS.md"
      - "build.rs"
      - "src/**"
      - "tests/**"

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  lint-test:
    name: Lint & Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> target

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Cargo check
        run: cargo check --workspace --all-targets --all-features

      - name: Run tests
        run: cargo test --workspace --all-targets --all-features -- --nocapture

      - name: Build release binaries
        run: cargo build --release --workspace --all-features

  msrv:
    name: MSRV check (1.75)
    runs-on: ubuntu-latest
    needs: lint-test
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain (MSRV)
        uses: dtolnay/rust-toolchain@1.75.0

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> target
          shared-key: msrv

      - name: Cargo check (MSRV)
        run: cargo check --workspace --all-targets

      - name: Run tests (MSRV)
        run: cargo test --workspace --all-targets -- --nocapture

  security-audit:
    name: Security audit
    runs-on: ubuntu-latest
    needs: lint-test
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> target
          shared-key: security

      - name: Install cargo-audit
        run: cargo install --locked cargo-audit

      - name: Run cargo audit
        run: cargo audit
